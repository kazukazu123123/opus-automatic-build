name: Build Opus (Windows via Ubuntu)

on:
  push:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake libtool \
            gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 \
            gcc-mingw-w64-i686 g++-mingw-w64-i686 pkg-config zip wget

      - name: Download Opus tarball
        run: |
          wget https://downloads.xiph.org/releases/opus/opus-1.5.2.tar.gz
          tar -xzf opus-1.5.2.tar.gz

      # ------------------------
      # Build for x86 (i686)
      # ------------------------
      - name: Build Opus for x86 (i686)
        run: |
          cd opus-1.5.2
          ./configure --disable-intrinsics --host=i686-w64-mingw32 --disable-asm \
                      --prefix=/ --disable-rtcd --disable-extra-programs --disable-stack-protector \
                      --disable-static --enable-shared \
                      LDFLAGS="-static-libgcc"
          sed -i 's/-D_FORTIFY_SOURCE=2//g' Makefile
          make -j$(nproc)
          make install DESTDIR=$(pwd)/build/i686

      - name: Package x86 ZIP
        run: |
          cd opus-1.5.2
          mkdir -p package_i686/bin package_i686/lib_x86 package_i686/include

          # Opus DLL + import library
          cp .libs/libopus-0.dll package_i686/bin/
          cp .libs/libopus.dll.a package_i686/lib_x86/

          # Headers
          cp -r build/i686/include/* package_i686/include/ || true

          cd package_i686
          zip -r ../opus-windows-i686-1.5.2.zip .
          echo "I686_ARCHIVE_NAME=$(pwd)/../opus-windows-i686-1.5.2.zip" >> $GITHUB_ENV

      # ------------------------
      # Build for x64 (x86_64)
      # ------------------------
      - name: Build Opus for x64 (x86_64)
        run: |
          cd opus-1.5.2
          make distclean
          ./configure --disable-intrinsics --host=x86_64-w64-mingw32 --disable-asm \
                      --prefix=/ --disable-rtcd --disable-extra-programs --disable-stack-protector \
                      --disable-static --enable-shared \
                      LDFLAGS="-static-libgcc"
          sed -i 's/-D_FORTIFY_SOURCE=2//g' Makefile
          make -j$(nproc)
          make install DESTDIR=$(pwd)/build/x86_64

      - name: Package x64 ZIP
        run: |
          cd opus-1.5.2
          mkdir -p package_x86_64/bin package_x86_64/lib_x64 package_x86_64/include

          # Opus DLL + import library
          cp .libs/libopus-0.dll package_x86_64/bin/
          cp .libs/libopus.dll.a package_x86_64/lib_x64/

          # Headers
          cp -r build/x86_64/include/* package_x86_64/include/ || true

          cd package_x86_64
          zip -r ../opus-windows-x86_64-1.5.2.zip .
          echo "X86_64_ARCHIVE_NAME=$(pwd)/../opus-windows-x86_64-1.5.2.zip" >> $GITHUB_ENV

      # ------------------------
      # GitHub Release
      # ------------------------
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "opus-1.5.2"
          name: Opus 1.5.2 - Windows DLL Binaries
          body: |
            Windows DLL binaries for Opus 1.5.2

            ## Contents:
            - **opus-windows-i686-1.5.2.zip** → 32-bit build
            - **opus-windows-x86_64-1.5.2.zip** → 64-bit build

            Each archive includes:
            - `bin/` → `libopus-0.dll`
            - `lib_x86/` or `lib_x64/` → import libraries (`.dll.a`)
            - `include/` → headers

            Built with MinGW-w64 on Ubuntu.
          files: |
            ${{ env.I686_ARCHIVE_NAME }}
            ${{ env.X86_64_ARCHIVE_NAME }}
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
